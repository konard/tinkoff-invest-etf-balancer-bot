import { balancer } from './src/balancer';
import { Wallet, DesiredWallet } from './src/types.d';
import { convertNumberToTinkoffNumber } from './src/utils';

console.log('=== –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –õ–û–ì–ò–ö–ò –ë–ê–õ–ê–ù–°–ò–†–û–í–©–ò–ö–ê ===\n');

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å
const testWallet: Wallet = [
  {
    base: 'TGLD',
    quote: 'RUB', 
    figi: 'BBG004S68505',
    amount: 100,
    lotSize: 1,
    price: convertNumberToTinkoffNumber(120),
    priceNumber: 120,
    lotPrice: convertNumberToTinkoffNumber(120),
    lotPriceNumber: 120,
    totalPrice: convertNumberToTinkoffNumber(12000),
    totalPriceNumber: 12000,
  },
  {
    base: 'TRUR',
    quote: 'RUB',
    figi: 'BBG004S68614', 
    amount: 50,
    lotSize: 1,
    price: convertNumberToTinkoffNumber(100),
    priceNumber: 100,
    lotPrice: convertNumberToTinkoffNumber(100),
    lotPriceNumber: 100,
    totalPrice: convertNumberToTinkoffNumber(5000),
    totalPriceNumber: 5000,
  },
  {
    base: 'RUB',
    quote: 'RUB',
    figi: undefined,
    amount: 1000,
    lotSize: 1,
    price: convertNumberToTinkoffNumber(1),
    priceNumber: 1,
    lotPrice: convertNumberToTinkoffNumber(1), 
    lotPriceNumber: 1,
    totalPrice: convertNumberToTinkoffNumber(1000),
    totalPriceNumber: 1000,
  }
];

// –ñ–µ–ª–∞–µ–º—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å - —Ä–∞–≤–Ω—ã–µ –¥–æ–ª–∏
const desiredWallet: DesiredWallet = {
  'TGLD': 30, // –•–æ—Ç–∏–º –º–µ–Ω—å—à–µ TGLD (—Å–µ–π—á–∞—Å ~67%)
  'TRUR': 60, // –•–æ—Ç–∏–º –±–æ–ª—å—à–µ TRUR (—Å–µ–π—á–∞—Å ~28%)  
  'RUB': 10   // –•–æ—Ç–∏–º –º–µ–Ω—å—à–µ —Ä—É–±–ª–µ–π
};

async function testBalancerLogic() {
  try {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–∫–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    (global as any).INSTRUMENTS = [
      { ticker: 'TGLD', figi: 'BBG004S68505', lot: 1 },
      { ticker: 'TRUR', figi: 'BBG004S68614', lot: 1 }
    ];

    console.log('üìä –¢–ï–ö–£–©–ò–ô –ü–û–†–¢–§–ï–õ–¨:');
    console.log('TGLD: 100 √ó 120‚ÇΩ = 12,000‚ÇΩ (66.7%)');
    console.log('TRUR: 50 √ó 100‚ÇΩ = 5,000‚ÇΩ (27.8%)'); 
    console.log('RUB: 1,000‚ÇΩ (5.6%)');
    console.log('–ò–¢–û–ì–û: 18,000‚ÇΩ\n');

    console.log('üéØ –ñ–ï–õ–ê–ï–ú–´–ô –ü–û–†–¢–§–ï–õ–¨:');
    console.log('TGLD: 30% = 5,400‚ÇΩ (–Ω—É–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å)');
    console.log('TRUR: 60% = 10,800‚ÇΩ (–Ω—É–∂–Ω–æ –∫—É–ø–∏—Ç—å)');
    console.log('RUB: 10% = 1,800‚ÇΩ\n');

    console.log('‚öôÔ∏è –ó–ê–ü–£–°–ö–ê–ï–ú –ë–ê–õ–ê–ù–°–ò–†–û–í–©–ò–ö (dry-run)...\n');

    const result = await balancer(testWallet, desiredWallet, [], 'manual', true);

    console.log('‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢:');
    console.log('Final percents:', result.finalPercents);
    console.log('Mode used:', result.modeUsed);
    console.log('Total portfolio value:', result.totalPortfolioValue);
    console.log('Orders planned:', result.ordersPlanned?.length || 0);

    if (result.ordersPlanned && result.ordersPlanned.length > 0) {
      console.log('\nüìã –ü–õ–ê–ù–ò–†–£–ï–ú–´–ï –û–†–î–ï–†–ê:');
      result.ordersPlanned.forEach((order, index) => {
        const action = (order.toBuyLots || 0) > 0 ? '–ö–£–ü–ò–¢–¨' : '–ü–†–û–î–ê–¢–¨';
        const lots = Math.abs(order.toBuyLots || 0);
        console.log(`${index + 1}. ${action} ${lots} –ª–æ—Ç–æ–≤ ${order.base} (${lots * (order.lotPriceNumber || 0)}‚ÇΩ)`);
      });
    }

    console.log('\nüîÑ –õ–û–ì–ò–ö–ê –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–ò:');
    console.log('- –°–Ω–∞—á–∞–ª–∞ –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –ø—Ä–æ–¥–∞–∂–∏ (–ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤)');
    console.log('- –ü–æ—Ç–æ–º –ø–æ–∫—É–ø–∫–∏ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤)');
    console.log('- –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –Ω–∞–ª–∏—á–∏–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–æ–∫');

  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê:', error);
  }
}

testBalancerLogic();